{"version":3,"sources":["hooks/useHttp.js","components/Card.jsx","pages/Main.jsx","App.js","index.js"],"names":["useHttp","useState","isLoading","setIsLoading","error","setError","sendRequest","useCallback","applyData","a","method","url","otherConfig","axios","data","Error","StyledCard","styled","div","Card","task","setTask","className","Form","Control","onChange","e","currentTarget","value","type","placeholder","Button","onClick","createdAt","Date","headers","Main","setTasks","applyTask","temp","key","push","id","useEffect","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+PA8BeA,EA3BC,WACd,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAkBA,MAAO,CACLH,YACAE,QACAE,YApBkBC,sBAAW,uCAC7B,aAAwCC,GAAxC,uBAAAC,EAAA,6DAASC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,IAAQC,EAAzB,0BAEIT,GAAa,GAFjB,SAG2BU,IAAM,aAC3BH,SACAC,OACGC,IANT,gBAGYE,EAHZ,EAGYA,KAKRX,GAAa,GACTK,GAAWA,EAAUM,GAT7B,kDAWIT,EAAS,IAAIU,MAAM,uBAXvB,0DAD6B,wDAe7B,M,OChBEC,EAAaC,IAAOC,IAAV,4KA8CDC,EAnCF,WACX,MAAwBlB,mBAAS,IAAjC,mBAAOmB,EAAP,KAAaC,EAAb,KACQf,EAAgBN,IAAhBM,YACR,OACE,eAACU,EAAD,WACE,iCACE,oBAAIM,UAAU,cAAd,yBAEF,+BACE,cAACC,EAAA,EAAKC,QAAN,CACEC,SAAU,SAACC,GAAD,OAAOL,EAAQK,EAAEC,cAAcC,QACzCC,KAAK,OACLC,YAAY,sBAGhB,wBAAQR,UAAU,cAAlB,SACE,cAACS,EAAA,EAAD,CACEC,QAAS,kBACP1B,EAAY,CACVK,IACE,yEACFD,OAAQ,OACRI,KAAM,CAAEM,OAAMa,UAAW,IAAIC,MAC7BC,QAAS,CACP,eAAgB,uBARxB,uBCAOC,EA5BF,WACX,MAA0BnC,mBAAS,IAAnC,mBAAcoC,GAAd,WACQ/B,EAAgBN,IAAhBM,YAEFgC,EAAY,SAACxB,GACjB,IAAMyB,EAAO,GACb,IAAK,IAAMC,KAAO1B,EAChByB,EAAKE,KAAL,aACEC,GAAIF,GACD1B,EAAK0B,KAGZH,EAASE,IAaX,OAVAI,qBAAU,WACRrC,EACE,CACEI,OAAQ,MACRC,IACE,gFAEJ2B,KAED,CAAChC,IACG,cAAC,EAAD,KCvBMsC,EAJH,WACV,OAAO,cAAC,EAAD,KCEHC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.cdf809b8.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const sendRequest = useCallback(\r\n    async ({ method, url, ...otherConfig }, applyData) => {\r\n      try {\r\n        setIsLoading(true);\r\n        const { data } = await axios({\r\n          method,\r\n          url,\r\n          ...otherConfig\r\n        });\r\n        setIsLoading(false);\r\n        if (applyData) applyData(data);\r\n      } catch (e) {\r\n        setError(new Error(\"Something Happened\"));\r\n      }\r\n    },\r\n    []\r\n  );\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n","import styled from \"styled-components\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport useHttp from \"../hooks/useHttp\";\r\n\r\nconst StyledCard = styled.div`\r\n  margin: 2rem 5rem 0 5rem;\r\n  box-shadow: 0 2px 8px gray;\r\n  border-radius: 10px;\r\n  padding: 1rem;\r\n\r\n  & > main {\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nconst Card = () => {\r\n  const [task, setTask] = useState(\"\");\r\n  const { sendRequest } = useHttp();\r\n  return (\r\n    <StyledCard>\r\n      <header>\r\n        <h2 className=\"text-center\">Add Tasks</h2>\r\n      </header>\r\n      <main>\r\n        <Form.Control\r\n          onChange={(e) => setTask(e.currentTarget.value)}\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Task\"\r\n        />\r\n      </main>\r\n      <footer className=\"text-center\">\r\n        <Button\r\n          onClick={() =>\r\n            sendRequest({\r\n              url:\r\n                \"https://practice-firebase-bd6f2-default-rtdb.firebaseio.com/tasks.json\",\r\n              method: \"POST\",\r\n              data: { task, createdAt: new Date() },\r\n              headers: {\r\n                \"Content-Type\": \"application/json\"\r\n              }\r\n            })\r\n          }\r\n        >\r\n          Add\r\n        </Button>\r\n      </footer>\r\n    </StyledCard>\r\n  );\r\n};\r\nexport default Card;\r\n","import Card from \"../components/Card\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useHttp from \"../hooks/useHttp\";\r\n\r\nconst Main = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const { sendRequest } = useHttp();\r\n\r\n  const applyTask = (data) => {\r\n    const temp = [];\r\n    for (const key in data) {\r\n      temp.push({\r\n        id: key,\r\n        ...data[key]\r\n      });\r\n    }\r\n    setTasks(temp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    sendRequest(\r\n      {\r\n        method: \"GET\",\r\n        url:\r\n          \"https://practice-firebase-bd6f2-default-rtdb.firebaseio.com/movieReview.json\"\r\n      },\r\n      applyTask\r\n    );\r\n  }, [sendRequest]);\r\n  return <Card />;\r\n};\r\n\r\nexport default Main;\r\n","import Main from \"./pages/Main\";\n\nconst App = () => {\n  return <Main />;\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}